{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst addLeadingZero = (value) => String(value).padStart(2, '0');\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysValue = document.querySelector('[data-days]');\ndaysValue.textContent = addLeadingZero(0);\nconst hoursValue = document.querySelector('[data-hours]');\nhoursValue.textContent = addLeadingZero(0);\nconst minutesValue = document.querySelector('[data-minutes]');\nminutesValue.textContent = addLeadingZero(0);\nconst secondsValue = document.querySelector('[data-seconds]');\nsecondsValue.textContent = addLeadingZero(0);\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nconst saveTimerToLocalStorage = () => {\n    localStorage.setItem(\"timer-state\", JSON.stringify({ deadline: userSelectedDate }));\n};\n\nconst loadTimerFromLocalStorage = () => {\n    const savedData = localStorage.getItem(\"timer-state\");\n    if (savedData) {\n        const parsedData = JSON.parse(savedData);\n        userSelectedDate = parsedData.deadline ? new Date(parsedData.deadline) : null;\n        if (userSelectedDate) {\n            datetimePicker.value = userSelectedDate.toISOString().slice(0, 16);\n            if (userSelectedDate > new Date()) {\n                startBtn.disabled = false;\n                updateTimer();\n                startTimer();\n            }\n        }\n    }\n};\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate <= new Date()) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n                position: 'topRight'\n            });\n            startBtn.disabled = true;\n            userSelectedDate = null;\n            saveTimerToLocalStorage();\n        } else {\n            userSelectedDate = selectedDate;\n            startBtn.disabled = false;\n            saveTimerToLocalStorage();\n        }\n    },\n};\n\nflatpickr(datetimePicker, options);\n\nconst updateTimer = () => {\n    const now = new Date();\n    const timeDiff = userSelectedDate - now;\n\n    if (timeDiff <= 0) {\n        clearInterval(timerInterval);\n        timerInterval = null;\n        daysValue.textContent = addLeadingZero(0);\n        hoursValue.textContent = addLeadingZero(0);\n        minutesValue.textContent = addLeadingZero(0);\n        secondsValue.textContent = addLeadingZero(0);\n        datetimePicker.disabled = false;\n        startBtn.disabled = true;\n        localStorage.removeItem(\"timer-state\");\n        return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeDiff);\n    daysValue.textContent = addLeadingZero(days);\n    hoursValue.textContent = addLeadingZero(hours);\n    minutesValue.textContent = addLeadingZero(minutes);\n    secondsValue.textContent = addLeadingZero(seconds);\n};\n\nconst startTimer = () => {\n    if (!userSelectedDate || timerInterval) return;\n\n    datetimePicker.disabled = true;\n    startBtn.disabled = true;\n    updateTimer();\n    timerInterval = setInterval(updateTimer, 1000);\n};\n\nstartBtn.addEventListener('click', startTimer);\nloadTimerFromLocalStorage();\n"],"names":["addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","datetimePicker","startBtn","daysValue","hoursValue","minutesValue","secondsValue","userSelectedDate","timerInterval","saveTimerToLocalStorage","loadTimerFromLocalStorage","savedData","parsedData","updateTimer","startTimer","options","selectedDates","selectedDate","iziToast","flatpickr","timeDiff"],"mappings":"+IAKA,MAAMA,EAAkBC,GAAU,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAE/D,SAASC,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,MAAMC,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,aAAa,EACtDA,EAAU,YAAcV,EAAe,CAAC,EACxC,MAAMW,EAAa,SAAS,cAAc,cAAc,EACxDA,EAAW,YAAcX,EAAe,CAAC,EACzC,MAAMY,EAAe,SAAS,cAAc,gBAAgB,EAC5DA,EAAa,YAAcZ,EAAe,CAAC,EAC3C,MAAMa,EAAe,SAAS,cAAc,gBAAgB,EAC5DA,EAAa,YAAcb,EAAe,CAAC,EAE3C,IAAIc,EAAmB,KACnBC,EAAgB,KAEpB,MAAMC,EAA0B,IAAM,CAClC,aAAa,QAAQ,cAAe,KAAK,UAAU,CAAE,SAAUF,CAAkB,CAAA,CAAC,CACtF,EAEMG,EAA4B,IAAM,CACpC,MAAMC,EAAY,aAAa,QAAQ,aAAa,EACpD,GAAIA,EAAW,CACX,MAAMC,EAAa,KAAK,MAAMD,CAAS,EACvCJ,EAAmBK,EAAW,SAAW,IAAI,KAAKA,EAAW,QAAQ,EAAI,KACrEL,IACAN,EAAe,MAAQM,EAAiB,YAAa,EAAC,MAAM,EAAG,EAAE,EAC7DA,EAAmB,IAAI,OACvBL,EAAS,SAAW,GACpBW,IACAC,KAGX,CACL,EAEMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACpBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,UAC1B,CAAa,EACDhB,EAAS,SAAW,GACpBK,EAAmB,KACnBE,MAEAF,EAAmBU,EACnBf,EAAS,SAAW,GACpBO,IAEP,CACL,EAEAU,EAAUlB,EAAgBc,CAAO,EAEjC,MAAMF,EAAc,IAAM,CAEtB,MAAMO,EAAWb,EADL,IAAI,KAGhB,GAAIa,GAAY,EAAG,CACf,cAAcZ,CAAa,EAC3BA,EAAgB,KAChBL,EAAU,YAAcV,EAAe,CAAC,EACxCW,EAAW,YAAcX,EAAe,CAAC,EACzCY,EAAa,YAAcZ,EAAe,CAAC,EAC3Ca,EAAa,YAAcb,EAAe,CAAC,EAC3CQ,EAAe,SAAW,GAC1BC,EAAS,SAAW,GACpB,aAAa,WAAW,aAAa,EACrC,MACH,CAED,KAAM,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUyB,CAAQ,EAC5DjB,EAAU,YAAcV,EAAeI,CAAI,EAC3CO,EAAW,YAAcX,EAAeK,CAAK,EAC7CO,EAAa,YAAcZ,EAAeM,CAAO,EACjDO,EAAa,YAAcb,EAAeO,CAAO,CACrD,EAEMc,EAAa,IAAM,CACjB,CAACP,GAAoBC,IAEzBP,EAAe,SAAW,GAC1BC,EAAS,SAAW,GACpBW,IACAL,EAAgB,YAAYK,EAAa,GAAI,EACjD,EAEAX,EAAS,iBAAiB,QAASY,CAAU,EAC7CJ,EAA2B"}